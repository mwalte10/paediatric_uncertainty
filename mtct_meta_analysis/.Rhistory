install.packages('meta')
library(meta)
library(data.table)
dt <- fread('mtct_perinatal_estimates.csv')
get_ci <- function(tt.x){
main <- metaprop(event = event.e, n = n.e, data = dt[tt == 'preg_inf'], studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
out <- lapply(unique(dt$tt), get_ci)
out
get_ci <- function(tt.x){
main <- metaprop(event = event.e, n = n.e, data = dt[tt ==  tt.x], studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
out <- lapply(unique(dt$tt), get_ci)
ttix
unique(dt$tt)
dt
out <- lapply(unique(dt$tt)[1:4], get_ci)
out
out['tt']
out[['tt']]
out$tt
names(out)
unlist(out, recursive = F)
out = unlist(out, recursive = F)
out$tt
out['tt']
out[['tt']]
names(out)
get(out, 'tt')
out <- lapply(unique(dt$tt)[1:4], get_ci)
lapply(out, '[[', 1)
unlist(lapply(out, '[[', 1))
data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
dt_new$lower / 1.96
(dt_new$est - dt_new$lower )/ 1.96
(dt_new$est - dt_new$lower )/ 1.96 / dt_new$est
dt_bf <- fread('bf_studies.csv')
unique(dt_bf)
unique(dt_bf$tt)
dt_bf <- fread('bf_studies.csv')
out <- lapply(unique(dt_bf$tt)[1:7], get_ci)
unique(dt_bf$tt)[1:7]
dt_bf <- dt_bf[,1:5]
out <- lapply(unique(dt_bf$tt)[1:7], get_ci)
tt.x = 'bf_inf'
get_ci <- function(tt.x, data){
dt = data[tt == tt.x]
main <- metaprop(event = event.e, n = n.e, data = dt, studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
dt_bf <- fread('bf_studies.csv')
dt_bf <- dt_bf[,1:5]
out <- lapply(unique(dt_bf$tt)[1:7], get_ci, data = dt_bf)
out
out = unlist(out, recursive = F)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
out
unlist(lapply(out, '[[', 1)
)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
out <- lapply(unique(dt_bf$tt)[1:7], get_ci, data = dt_bf)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
dt_new
dt_peri <- fread('mtct_perinatal_estimates.csv')
out <- lapply(unique(dt_peri$tt)[1:4], get_ci, data = dt_peri)
dt_new_peri <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)))
dt_new_peri
dt_new_peri <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'peri')
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'bf')
dt_new
dt_new_peri
install.packages('meta')
library(meta)
library(data.table)
get_ci <- function(tt.x, data){
dt = data[tt == tt.x]
main <- metaprop(event = event.e, n = n.e, data = dt, studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
dt_peri <- fread('mtct_perinatal_estimates.csv')
out <- lapply(unique(dt_peri$tt)[1:4], get_ci, data = dt_peri)
dt_new_peri <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'peri')
dt_bf <- fread('bf_studies.csv')
dt_bf <- dt_bf[,1:5]
out <- lapply(unique(dt_bf$tt)[1:7], get_ci, data = dt_bf)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'bf')
install.packages("meta")
library(meta)
library(data.table)
get_ci <- function(tt.x, data){
dt = data[tt == tt.x]
main <- metaprop(event = event.e, n = n.e, data = dt, studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
dt_peri <- fread('mtct_perinatal_estimates.csv')
out <- lapply(unique(dt_peri$tt)[1:4], get_ci, data = dt_peri)
dt_new_peri <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'peri')
dt_bf <- fread('bf_studies.csv')
dt_bf <- dt_bf[,1:5]
out <- lapply(unique(dt_bf$tt)[1:7], get_ci, data = dt_bf)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'bf')
dt_new
dt_new_peri
dt <- rbind(dt_new_peri, dt_new)
dt
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time)
library(ggplot)
library(ggplot2)
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time)
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time) +
geom_errorbar(aes(ymin = lower, ymax = upper))
dt_new_peri[tt =='sdnvp', tt := 'sdnvp_peri]
dt_new_peri[tt =='sdnvp', tt := 'sdnvp_peri']
dt <- rbind(dt_new_peri, dt_new)
unique(dt$tt)
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time) +
geom_errorbar(aes(ymin = lower, ymax = upper))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free_x') +
geom_errorbar(aes(ymin = lower, ymax = upper))
dt
dt[,lower_alt := est - (est * 0.05) * 1.96]
dt[,upper_alt := est + (est * 0.05) * 1.96]
dt
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free_x') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
library(stringr)
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
ggplot(dt, aes(as.character(tt), est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
source("C:/Users/mwalters/Documents/Projects/Paed uncertainty/mtct_meta_analysis/construct_ci.R", echo=TRUE)
dt_bf <- fread('bf_studies.csv')
dt_bf <- dt_bf[,1:5]
unique(dt_bf$tt)[1:7]
out <- lapply(unique(dt_bf$tt)[1:8], get_ci, data = dt_bf)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'bf')
dt <- rbind(dt_new_peri, dt_new)
dt[,lower_alt := est - (est * 0.05) * 1.96]
dt[,upper_alt := est + (est * 0.05) * 1.96]
ggplot(dt, aes(as.character(tt), est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
dt$tt <- factor(dt$tt, levels = c('preg_inf', 'bf_inf', 'bf_existing_lte350',
'sdnvp_peri','sdnvp_350lte', 'sdnvp_350gte',
'opt_a', 'option_a', 'optbplus_bfpreg', 'optb_less4',
'optb_4plus', 'optb_onart'))
ggplot(dt, aes(as.character(tt), est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
dt
dt[time == 'bf']
0.001710063 * 100
0.011510290 * 100
# install.packages('meta')
library(meta)
library(data.table)
library(ggplot2)
library(stringr)
get_ci <- function(tt.x, data){
dt = data[tt == tt.x]
main <- metaprop(event = event.e, n = n.e, data = dt, studlab = author,
method = "GLMM", sm = "PLOGIT",
fixed = FALSE, random = TRUE, hakn = TRUE,
# to help with convergence issues
control=list(stepadj=0.5, maxiter=1000))
est = meta:::backtransf(main$TE.random, sm = 'PLOGIT')
lower = meta:::backtransf(main$lower.random, sm = 'PLOGIT')
upper = meta:::backtransf(main$upper.random, sm = 'PLOGIT')
return(list(tt = tt.x, est = est, lower = lower, upper = upper))
}
dt_peri <- fread('mtct_perinatal_estimates.csv')
out <- lapply(unique(dt_peri$tt)[1:4], get_ci, data = dt_peri)
dt_new_peri <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'peri')
dt_new_peri[tt =='sdnvp', tt := 'sdnvp_peri']
dt_bf <- fread('bf_studies.csv')
dt_bf <- dt_bf[,1:5]
DT_BF
dt_bf
out <- lapply(unique(dt_bf$tt), get_ci, data = dt_bf)
dt_new <- data.table(tt = unlist(lapply(out, '[[', 1)),
est = unlist(lapply(out, '[[', 2)),
lower = unlist(lapply(out, '[[', 3)),
upper = unlist(lapply(out, '[[', 4)),
time = 'bf')
dt <- rbind(dt_new_peri, dt_new)
dt[,lower_alt := est - (est * 0.05) * 1.96]
dt[,upper_alt := est + (est * 0.05) * 1.96]
dt
unique(dt$tt)
setdiff(c('preg_inf', 'bf_inf', 'bf_existing_lte350',
'sdnvp_peri','sdnvp_350lte', 'sdnvp_350gte',
'opt_a', 'option_a', 'optbplus_bfpreg', 'optb_less4',
'optb_4plus', 'optb_onart'), uniqu(dt$tt))
setdiff(c('preg_inf', 'bf_inf', 'bf_existing_lte350',
'sdnvp_peri','sdnvp_350lte', 'sdnvp_350gte',
'opt_a', 'option_a', 'optbplus_bfpreg', 'optb_less4',
'optb_4plus', 'optb_onart'), unique(dt$tt))
dt$tt <- factor(dt$tt, levels = c('preg_inf', 'bf_inf', 'bf_existing_lte350',
'sdnvp_peri','sdnvp_350lte', 'sdnvp_350gte',
'opt_a', 'option_a', 'optbplus_bfpreg',
'optb_4plus', 'optb_onart'))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free_x') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = T) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
ggplot(dt, aes(tt, est)) +geom_point() + facet_wrap(~time, scales = 'free_x') +
geom_errorbar(aes(ymin = lower, ymax = upper)) +
geom_errorbar(aes(ymin = lower_alt, ymax = upper_alt, col = 'red'), show.legend = F) +
labs(y = 'Transmission rate', x = 'Treatment type')+
scale_x_discrete(labels = function(x) str_wrap(x, width = 3))
library(eppasm)
View(simmod)
library(eppasm)
pjnz <- 'C:/Users/mwalters/Imperial College London/HIV Inference Group - WP - Documents/Data/Spectrum files/2022 final shared/EPP-Gen/benin_2022_03_16.PJNZ'
expect_warning(fp <- eppasm::prepare_directincid(pjnz1),
"no non-missing arguments to min; returning Inf")
<- eppasm::prepare_directincid(pjnz1)
fp <- eppasm::prepare_directincid(pjnz1)
mod <- eppasm::simmod(fp)
fp <- eppasm::prepare_directincid(pjnz)
mod <- eppasm::simmod(fp)
mod
names(mod)
names(attributes(mod))
##data used within simmod
names(fp)
setwd('C:/Users/mwalters/leapfrog')
devtools::load_all()
View(prepare_leapfrog_projp())
View(prepare_leapfrog_projp)
read_hivproj_param()
View(read_hivproj_param)
eppasm::read_hivproj_param(pjnz)
#data that was used in fitting spectrum
eppasm::read_hivproj_param(pjnz)
#data that was used in fitting spectrum
data <- eppasm::read_hivproj_param(pjnz)
names(data)
data$art15plus_num
dt
dt_bf
